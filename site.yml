# Install on CentOS 6+7
---
#============================================================================== all
#- hosts: all
#  become: true
#  # check_mode: yes  # yes=dry-run
#  roles:
#    - common
#============================================================================== all
#  tasks:
#
##- debug: var="{{ item }}"
##  with_items:
##  - ansible_os_family
##  - ansible_distribution
##  - ansible_distribution_major_version
##  - ansible_distribution_release
##  - ansible_distribution_version
#
#    - name: Verify Ansible meets common version requirements.
#      assert:
#        that: "ansible_version.full is version_compare('2.8.12', '>=')"
#        msg: >
#          "You must update Ansible to at least 2.8.12 to use this role."
#    #- debug: var=ansible_version.full
#
#    # display IP address from inventory file
#    - debug: var=ansible_host
#
#    # don't use old "{ items }" & with_items loop deprecated in Ansible 2.10
#    # instead list the package names as a list as name argument
#    - name: install CentOS required packages
#      yum:
#        name: ['ntp', 'lsof']
#        state: installed
#        update_cache: yes
#
#    - name: configure and enable NTP
#      service: 
#        name: ntpd 
#        state: started 
#        enabled: yes
#    - name: set timezone
#      timezone: name=America/Los_Angeles
#
#    - name: check TOD and timezone
#      command: date
#      register: tod 
#    - debug: var=tod.stdout_lines
#
#    # ensure ntp has time to connect with external servers (centos7)
#    - name: ntpdc
#      command: ntpdc -c peer
#      register: ntpdc
#    - debug: var=ntpdc.stdout_lines

#============================================================================== gl1
- hosts: gl1
  become: true
#============================================================================== gl1
  pre_tasks:
    - name: install epel-release
      yum: 
        name: epel-release
        state: installed 
        update_cache: yes

  tasks:
    - name: install nginx
      yum: 
        name: nginx
        state: installed 
        update_cache: yes
      register: nginx_installed
    # - debug: var=nginx_installed

    - name: update nginx index.html
      replace: 
        path: /usr/share/nginx/html/index.html
        regexp: '<strong>nginx</strong> on Fedora'
        replace: '<strong>nginx</strong> on {{ ansible_hostname }}'
        backup: yes

    - name: start and enable nginx
      service: 
        name: nginx 
        state: started 
        enabled: yes
      register: nginx_started
    # - debug: var=nginx_started

#============================================================================== gl2
- hosts: gl2
  become: true
#============================================================================== gl2
  tasks:
    - name: install apache
      yum:
        name: httpd
        state: installed 
        update_cache: yes

    # CentOS apachectl is a script that doesn't allow parameters by default
    # so validate param won't work here because ansible requires %s parameter
    - name: configure apache
      replace: 
        path: /etc/httpd/conf/httpd.conf
        regexp: "{{ item.regex }}"
        replace: "{{ item.replace }}"
        backup: yes
      with_items:
        - { regex: '^Listen\s+80\s*$' , replace: 'Listen 0.0.0.0:80' }
        - { regex: '^#ServerName.*$' , replace: 'ServerName gl2:80'}
      notify:
        - restart apache

    - name: validate apache config
      shell: /sbin/apachectl configtest
      args:
        warn: no
      register: configtest
    - debug: var=configtest.stderr_lines
        
    - name: set index.html
      copy:
        dest: /var/www/html/index.html
        content: |
          <h1> Welcome to {{ ansible_hostname }} </h1>

        owner: root
        group: root
        mode: 0644
      register: http_index
    # - debug: var=http_index

    - name: enable and run apache
      service: 
        name: httpd
        state: started
        enabled: yes
      register: apache_started

  handlers:
    - name: restart apache
      service: 
        name: httpd 
        state: restarted

#============================================================================== lbr
- hosts: lbr
  become: true
  roles:
  - common
  - haproxy
